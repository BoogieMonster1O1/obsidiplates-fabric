plugins {
	id 'fabric-loom' version '0.5-SNAPSHOT'
	id "com.jfrog.bintray" version "1.7"
	id "maven-publish"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = "obsidiplates-fabric"
version = "0.1.0"
group = "io.github.boogiemonster1o1"

dependencies {
	minecraft "com.mojang:minecraft:1.16.1"
	mappings "net.fabricmc:yarn:1.16.1+build.21:v2"
	modImplementation "net.fabricmc:fabric-loader:0.9.0+build.204"
	modImplementation "io.github.prospector:modmenu:1.14.5+build.30"
	modApi "net.fabricmc.fabric-api:fabric-api:0.16.0+build.384-1.16.1"
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

bintray {
	user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
	key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    	publications = ['mavenJava'] 
    	pkg {
        	repo = 'cool-mods'
        	name = 'obsidiplates-fabric'
        	licenses = ['GPL-3.0-or-later']
        	vcsUrl = 'https://github.com/BoogieMonster1O1/obsidiplates-fabric'
			version {
        		name = 'Obsidiplates 0.1.0'
        		desc = 'Obsidiplates for Fabric, version 0.1.0'
        		released  = new Date()
    		}
    	}
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(sourcesJar) {
				builtBy remapSourcesJar
	    	}
	    	artifact(remapJar) {
				builtBy remapJar
	    	}

            groupId 'io.github.boogiemonster1o1'
            artifactId 'obsidiplates-fabric'
            version '0.1.0'
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Obsidiplates Fabric')
                root.appendNode('name', 'Obsidiplates Fabric')
                root.appendNode('url', 'https://site_for_lib.tld')
                root.children().last() + pomConfig
            }
	    
        }
    }
}

def pomConfig = {
    licenses {
        license {
            name "GPL-3.0-or-later"
            url "https://www.gnu.org/licenses/gpl-3.0.en.html"
            distribution "repo"
        }
    }
    
    scm {
       url "https://github.com/BoogieMonster1O1/obsidiplates-fabric"
    }
}

